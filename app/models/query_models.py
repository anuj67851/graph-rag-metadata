from pydantic import BaseModel, Field
from typing import List
from app.models.common_models import Subgraph # Import from common_models.py

class QueryRequest(BaseModel):
    """
    Represents the input for a user query to the backend.
    """
    query: str = Field(..., min_length=1, description="The natural language query from the user.")
    # Optional: session_id for chat history, user_id for personalization, etc.
    # session_id: Optional[str] = None

class SourceChunk(BaseModel):
    """
    Represents a single source text chunk used as context for the RAG response.
    """
    source_document: str = Field(..., description="The filename of the source document for this chunk.")
    chunk_text: str = Field(..., description="The actual text content of the chunk.")
    score: float = Field(..., description="The similarity score (L2 distance) of this chunk to the query. Lower is better.")

class QueryResponse(BaseModel):
    """
    Represents the full response from the backend for a user query.
    This will be sent to the Streamlit UI.
    """
    llm_answer: str = Field(..., description="The final natural language answer generated by the LLM.")
    subgraph_context: Subgraph = Field(..., description="The subgraph data used as context for the LLM. For visualization.")
    source_chunks: List[SourceChunk] = Field(..., description="The list of source text chunks used as context for the LLM.")

if __name__ == "__main__":
    # Example Usage
    query_req = QueryRequest(query="Tell me about Project Nova and Alpha Corp.")
    print("--- Query Request ---")
    print(query_req.model_dump_json(indent=2))

    # Assume some Node and Edge objects are created as in common_models.py example
    from .common_models import Node, Edge
    node_pn = {"id": "Project Nova", "label": "Project Nova", "type": "PROJECT", "properties": {"desc": "A solar energy initiative"}}
    node_ac = {"id": "Alpha Corp", "label": "Alpha Corp", "type": "ORGANIZATION", "properties": {"desc": "A tech company"}}
    edge_dev = {"source": "Alpha Corp", "target": "Project Nova", "label": "DEVELOPS", "properties":{}}
    subgraph_data = Subgraph(
        nodes=[Node(**node_pn), Node(**node_ac)],
        edges=[Edge(**edge_dev)]
    )

    source_chunk_example = SourceChunk(
        source_document="report.pdf",
        chunk_text="Alpha Corp announced the start of Project Nova, which aims to revolutionize the solar energy sector.",
        score=0.345
    )

    query_resp = QueryResponse(
        llm_answer="Project Nova is an initiative by Alpha Corp focused on the solar energy sector, as mentioned in report.pdf.",
        subgraph_context=subgraph_data,
        source_chunks=[source_chunk_example]
    )
    print("\n--- Query Response ---")
    print(query_resp.model_dump_json(indent=2))